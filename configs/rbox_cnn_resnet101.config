# RBox-CNN with Resnet-101
# Search for "PATH_TO_BE_CONFIGURED" to find the fields that should be configured.


model {
  rfaster_rcnn {

#================================================================================
#   Set the number fo classes
#================================================================================
    num_classes: 4
#--------------------------------------------------------------------------------
    feature_extractor {
      type: 'faster_rcnn_resnet101'
      first_stage_features_stride: 16
    }
    first_stage_anchor_generator {
      grid_rbbox_anchor_generator {
#================================================================================
#   Set parameters of anchors
#       sclae: 1 is 256 x 256 (pixels)
#       aspect_ratios: 2 is width*2 and height/2
#       angles: the unit is radian
#================================================================================
        scales: [0.25, 0.5, 0.75, 1]
        aspect_ratios: [3.0, 5.0, 7.0]
        angles: [-1.57079632679, -1.0471975512, -0.5235987756, 0.0, 0.5235987756, 1.0471975512, 1.57079632679]
#--------------------------------------------------------------------------------
        height_stride: 16
        width_stride: 16
      }
    }
    first_stage_box_predictor_conv_hyperparams {
      op: CONV
      regularizer {
        l2_regularizer {
          weight: 0.0
        }
      }
      initializer {
        truncated_normal_initializer {
          stddev: 0.01
        }
      }
    }
    first_stage_nms_score_threshold: 0.0
    first_stage_nms_iou_threshold: 0.6
#================================================================================
#   Set the numer of proposals at first stage
#================================================================================
    first_stage_max_proposals: 100
#--------------------------------------------------------------------------------
    first_stage_localization_loss_weight: 2.0
    first_stage_objectness_loss_weight: 1.0
    initial_crop_size: 14
    maxpool_kernel_size: 2
    maxpool_stride: 2
    second_stage_box_predictor {
      mask_rcnn_box_predictor {
        box_code_size: 5
        use_dropout: false
        dropout_keep_probability: 1.0
        fc_hyperparams {
          op: FC
          regularizer {
            l2_regularizer {
              weight: 0.0
            }
          }
          initializer {
            variance_scaling_initializer {
              factor: 1.0
              uniform: true
              mode: FAN_AVG
            }
          }
        }
      }
    }
    second_stage_post_processing {
      batch_non_max_suppression {
        box_type: RBBOX
        handle_as_single_class: True
        score_threshold: 0.01
        iou_threshold: 0.3
#================================================================================
#       Set the numer of proposals at second stage
#================================================================================
        max_detections_per_class: 100
        max_total_detections: 100
#--------------------------------------------------------------------------------
      }
      score_converter: SOFTMAX
    }
    second_stage_localization_loss_weight: 2.0
    second_stage_classification_loss_weight: 1.0
  }
}

train_config: {
  batch_size: 1
  optimizer {
    momentum_optimizer: {
      learning_rate: {
#================================================================================
#       Set learning rate
#================================================================================
        manual_step_learning_rate {
          initial_learning_rate: 0.0005
          schedule {
            step: 60000
            learning_rate: .00005
          }
          schedule {
            step: 100000
            learning_rate: .000005
          }
        }
#--------------------------------------------------------------------------------
      }
      momentum_optimizer_value: 0.9
    }
    use_moving_average: false
  }
#================================================================================
#       Set the number of iteration for learning
#================================================================================
  num_steps: 120000
#--------------------------------------------------------------------------------
  gradient_clipping_by_norm: 10.0
  fine_tune_checkpoint: "PATH_TO_BE_CONFIGURED"
  from_detection_checkpoint: true
  data_augmentation_options {
    random_horizontal_flip_rbox {
    }
  }
  data_augmentation_options {
    random_vertical_flip_rbox {
    }
  }
  data_augmentation_options {
    random_rotate_rbox {
      by_90: true
    }
  }
}

train_input_reader: {
  tf_record_input_reader {
    input_path: "PATH_TO_BE_CONFIGURED"
  }
  label_map_path: "PATH_TO_BE_CONFIGURED"
  image_dtype: "uint8"
}

eval_config: {
#================================================================================
#       Set the number of examples(images) of validation dataset
#================================================================================
  num_examples: 2000
#--------------------------------------------------------------------------------
  num_visualizations: 30
}

eval_input_reader: {
  tf_record_input_reader {
    input_path: "PATH_TO_BE_CONFIGURED"
  }
  label_map_path: "PATH_TO_BE_CONFIGURED"
  shuffle: false
  num_readers: 1
  image_dtype: "uint8"
}
